{
  "name": "Skills",
  "icon": "ðŸŽ¯",
  "description": "The Skills module provides functions for managing player skills and experience points. It supports various skill systems with a unified interface.",
  "clientFunctions": [
    {
      "name": "GetResourceName",
      "description": "Gets the name of the currently active skills system.",
      "syntax": "Bridge.Skills.GetResourceName()",
      "parameters": [],
      "returns": [
        {
          "type": "string",
          "description": "Name of the skills system being used"
        }
      ],
      "example": "local Bridge = exports['community_bridge']:Bridge()\n\nlocal skillsSystem = Bridge.Skills.GetResourceName()\nprint(\"Using skills system: \" .. skillsSystem)"
    },
    {
      "name": "GetSkillLevel",
      "description": "Gets the current level of a specific skill for the player.",
      "syntax": "Bridge.Skills.GetSkillLevel(skillName)",
      "parameters": [
        {
          "name": "skillName",
          "type": "string",
          "description": "Name of the skill to check"
        }
      ],
      "returns": [
        {
          "type": "number",
          "description": "Current level of the skill (0 if not supported)"
        }
      ],
      "example": "local Bridge = exports['community_bridge']:Bridge()\n\nlocal drivingLevel = Bridge.Skills.GetSkillLevel(\"driving\")\nlocal shootingLevel = Bridge.Skills.GetSkillLevel(\"shooting\")\n\nprint(\"Driving level: \" .. drivingLevel)\nprint(\"Shooting level: \" .. shootingLevel)"
    }
  ],
  "serverFunctions": [
    {
      "name": "GetResourceName",
      "description": "Gets the name of the currently active skills system.",
      "syntax": "Bridge.Skills.GetResourceName()",
      "parameters": [],
      "returns": [
        {
          "type": "string",
          "description": "Name of the skills system being used"
        }
      ],
      "example": "local Bridge = exports['community_bridge']:Bridge()\n\nlocal skillsSystem = Bridge.Skills.GetResourceName()\nprint(\"Using skills system: \" .. skillsSystem)"
    },
    {
      "name": "GetSkillLevel",
      "description": "Gets the current level of a specific skill for a player.",
      "syntax": "Bridge.Skills.GetSkillLevel(src, skillName)",
      "parameters": [
        {
          "name": "src",
          "type": "number",
          "description": "Player server ID"
        },
        {
          "name": "skillName",
          "type": "string",
          "description": "Name of the skill to check"
        }
      ],
      "returns": [
        {
          "type": "number",
          "description": "Current level of the skill (0 if not supported)"
        }
      ],
      "example": "local Bridge = exports['community_bridge']:Bridge()\n\nlocal playerDrivingLevel = Bridge.Skills.GetSkillLevel(source, \"driving\")\nprint(\"Player driving level: \" .. playerDrivingLevel)"
    },
    {
      "name": "AddXp",
      "description": "Adds experience points to a specific skill for a player.",
      "syntax": "Bridge.Skills.AddXp(src, skillName, amount)",
      "parameters": [
        {
          "name": "src",
          "type": "number",
          "description": "Player server ID"
        },
        {
          "name": "skillName",
          "type": "string",
          "description": "Name of the skill to add XP to"
        },
        {
          "name": "amount",
          "type": "number",
          "description": "Amount of XP to add"
        }
      ],
      "returns": [
        {
          "type": "boolean",
          "description": "True if XP was added successfully, false if not supported"
        }
      ],
      "example": "local Bridge = exports['community_bridge']:Bridge()\n\n-- Add driving XP when player completes a delivery\nlocal success = Bridge.Skills.AddXp(source, \"driving\", 25)\nif success then\n    Bridge.Notify.SendNotify(source, \"You gained 25 driving XP!\", \"success\")\nend"
    },
    {
      "name": "RemoveXp",
      "description": "Removes experience points from a specific skill for a player.",
      "syntax": "Bridge.Skills.RemoveXp(src, skillName, amount)",
      "parameters": [
        {
          "name": "src",
          "type": "number",
          "description": "Player server ID"
        },
        {
          "name": "skillName",
          "type": "string",
          "description": "Name of the skill to remove XP from"
        },
        {
          "name": "amount",
          "type": "number",
          "description": "Amount of XP to remove"
        }
      ],
      "returns": [
        {
          "type": "boolean",
          "description": "True if XP was removed successfully, false if not supported"
        }
      ],
      "example": "local Bridge = exports['community_bridge']:Bridge()\n\n-- Remove driving XP as penalty for reckless driving\nlocal success = Bridge.Skills.RemoveXp(source, \"driving\", 10)\nif success then\n    Bridge.Notify.SendNotify(source, \"You lost 10 driving XP for reckless driving!\", \"error\")\nend"
    }
  ]
}
