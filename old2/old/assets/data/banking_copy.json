{
  "name": "Le Banking",
  "icon": "üè¶",
  "description": "Banking and economy functions for managing player finances and transactions.",
  "clientFunctions": [
    {
      "name": "GetBalance",
      "description": "Gets the player's current bank balance",
      "syntax": "Bridge.Banking.GetBalance()",
      "parameters": [],
      "returns": [
        {
          "type": "number",
          "description": "The player's current bank balance"
        }
      ],
      "example": "local balance = Bridge.Banking.GetBalance()"
    },
    {
      "name": "WithdrawMoney",
      "description": "Withdraws money from the player's bank account",
      "syntax": "Bridge.Banking.WithdrawMoney(amount)",
      "parameters": [
        {
          "name": "amount",
          "type": "number",
          "description": "Amount to withdraw"
        }
      ],
      "returns": [
        {
          "type": "boolean",
          "description": "Returns true if withdrawal was successful"
        }
      ],
      "example": "local success = Bridge.Banking.WithdrawMoney(500)"
    }
  ],
  "serverFunctions": [
    {
      "name": "TransferMoney",
      "description": "Transfers money between player accounts",
      "syntax": "Bridge.Banking.TransferMoney(fromPlayer, toPlayer, amount)",
      "parameters": [
        {
          "name": "fromPlayer",
          "type": "number",
          "description": "Source player ID"
        },
        {
          "name": "toPlayer",
          "type": "number",
          "description": "Target player ID"
        },
        {
          "name": "amount",
          "type": "number",
          "description": "Amount to transfer"
        }
      ],
      "returns": [
        {
          "type": "boolean",
          "description": "Returns true if transfer was successful"
        }
      ],
      "example": "local success = Bridge.Banking.TransferMoney(1, 2, 1000)"
    }
  ]
}
