{
  "name": "Target",
  "icon": "ðŸŽ¯",
  "description": "The Target module provides functionality for creating interactive targeting zones and options for players to interact with entities, models, and specific areas in the world.",
  "clientFunctions": [
    {
      "name": "AddTargetEntity",
      "description": "Adds targeting interaction to a specific entity.",
      "syntax": "Bridge.Target.AddTargetEntity(entity, options)",
      "parameters": [
        {
          "name": "entity",
          "type": "number",
          "description": "Entity handle."
        },
        {
          "name": "options",
          "type": "table",
          "description": "Target configuration with the following properties:",
          "properties": [
            {
              "name": "name",
              "type": "string",
              "description": "Unique identifier."
            },
            {
              "name": "icon",
              "type": "string",
              "description": "Font Awesome icon."
            },
            {
              "name": "label",
              "type": "string",
              "description": "Display text."
            },
            {
              "name": "action",
              "type": "function",
              "description": "Callback function called when the option is selected."
            },
            {
              "name": "distance",
              "type": "number",
              "optional": true,
              "description": "Interaction distance (default: 2.0)."
            },
            {
              "name": "canInteract",
              "type": "function",
              "optional": true,
              "description": "Conditional function that returns whether interaction is allowed."
            }
          ]
        }
      ],
      "returns": [
        {
          "type": "boolean",
          "description": "Success status."
        }
      ],
      "example": "local Bridge = exports['community_bridge']:Bridge()\nlocal vehicle = GetVehiclePedIsIn(PlayerPedId(), false)\n\nBridge.Target.AddTargetEntity(vehicle, {\n    name = \"vehicle_options\",\n    icon = \"fas fa-car\",\n    label = \"Vehicle Options\",\n    distance = 3.0,\n    action = function(entity)\n        -- Open vehicle menu\n        TriggerEvent('vehicle:openMenu', entity)\n    end,\n    canInteract = function(entity)\n        -- Only if player owns the vehicle\n        return Bridge.Target.IsVehicleOwned(entity)\n    end\n})"
    },
    {
      "name": "AddTargetModel",
      "description": "Adds targeting interaction to specific entity models.",
      "syntax": "Bridge.Target.AddTargetModel(models, options)",
      "parameters": [
        {
          "name": "models",
          "type": "table or string",
          "description": "Model name(s) or hash(es)."
        },
        {
          "name": "options",
          "type": "table",
          "description": "Target configuration (see AddTargetEntity)."
        }
      ],
      "example": "local Bridge = exports['community_bridge']:Bridge()\n\n-- Target ATM models\nBridge.Target.AddTargetModel({\n    \"prop_atm_01\",\n    \"prop_atm_02\",\n    \"prop_atm_03\"\n}, {\n    name = \"use_atm\",\n    icon = \"fas fa-credit-card\",\n    label = \"Use ATM\",\n    distance = 1.5,\n    action = function(entity)\n        TriggerEvent('banking:openATM')\n    end\n})"
    },
    {
      "name": "AddTargetZone",
      "description": "Adds a rectangular target zone.",
      "syntax": "Bridge.Target.AddTargetZone(name, coords, width, length, options)",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "description": "Unique zone identifier."
        },
        {
          "name": "coords",
          "type": "vector3",
          "description": "Center coordinates of the zone."
        },
        {
          "name": "width",
          "type": "number",
          "description": "Zone width."
        },
        {
          "name": "length",
          "type": "number",
          "description": "Zone length."
        },
        {
          "name": "options",
          "type": "table",
          "description": "Target configuration."
        }
      ],
      "example": "local Bridge = exports['community_bridge']:Bridge()\n\n-- Create parking zone\nBridge.Target.AddTargetZone(\"parking_lot\", vector3(200.0, -800.0, 31.0), 10.0, 15.0, {\n    name = \"park_vehicle\",\n    icon = \"fas fa-parking\",\n    label = \"Park Vehicle\",\n    heading = 0.0,\n    minZ = 30.0,\n    maxZ = 32.0,\n    action = function()\n        local vehicle = GetVehiclePedIsIn(PlayerPedId(), false)\n        if vehicle ~= 0 then\n            TriggerServerEvent('parking:saveVehicle', vehicle)\n        end\n    end,\n    canInteract = function()\n        return IsPedInAnyVehicle(PlayerPedId(), false)\n    end\n})"
    },
    {
      "name": "RemoveTargetEntity",
      "description": "Removes targeting from a specific entity.",
      "syntax": "Bridge.Target.RemoveTargetEntity(entity, name)",
      "parameters": [
        {
          "name": "entity",
          "type": "number",
          "description": "Entity handle."
        },
        {
          "name": "name",
          "type": "string",
          "optional": true,
          "description": "Specific target name to remove. If not provided, all targets from the entity will be removed."
        }
      ],
      "example": "local Bridge = exports['community_bridge']:Bridge()\n\n-- Remove specific target\nlocal vehicle = GetVehiclePedIsIn(PlayerPedId(), false)\nBridge.Target.RemoveTargetEntity(vehicle, \"vehicle_options\")\n\n-- Remove all targets from entity\nBridge.Target.RemoveTargetEntity(vehicle)"
    },
    {
      "name": "RemoveTargetModel",
      "description": "Removes targeting from entity models.",
      "syntax": "Bridge.Target.RemoveTargetModel(models, name)",
      "parameters": [
        {
          "name": "models",
          "type": "table or string",
          "description": "Model name(s) or hash(es)."
        },
        {
          "name": "name",
          "type": "string",
          "optional": true,
          "description": "Specific target name to remove."
        }
      ],
      "example": "local Bridge = exports['community_bridge']:Bridge()\n\n-- Remove specific target from ATM model\nBridge.Target.RemoveTargetModel(\"prop_atm_01\", \"use_atm\")\n\n-- Remove all targets from multiple ATM models\nBridge.Target.RemoveTargetModel({\n    \"prop_atm_01\",\n    \"prop_atm_02\",\n    \"prop_atm_03\"\n})"
    },
    {
      "name": "RemoveTargetZone",
      "description": "Removes a target zone.",
      "syntax": "Bridge.Target.RemoveTargetZone(name)",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "description": "Zone identifier."
        }
      ],
      "example": "local Bridge = exports['community_bridge']:Bridge()\n\n-- Remove the parking lot target zone\nBridge.Target.RemoveTargetZone(\"parking_lot\")"
    }
  ],
  "serverFunctions": []
}
